-----
file:///Users/joan/Documents-Local/Relay/RelayNou/testfile.s

asr16:
	jsr __ashrhi3
	ret

lsr16:
	jsr __lshrhi3
	ret

lsl16:
	jsr __ashlhi3
	ret

multiply16s:
	jsr __mulhi3
	ret

multiply16u:
	jsr __mulhi3
	ret

multiply32s:
	ld.w [sp, 2], r2
	ld.w [sp, 4], r3
	jsr __mulsi3
	ret

multiply32u:
	ld.w [sp, 2], r2
	ld.w [sp, 4], r3
	jsr __mulsi3
	ret

divide16s:
	jsr __divhi3
	ret

modulus16s:
	jsr __modhi3
	ret

divide16u:
	jsr __udivhi3
	ret

modulus16u:
	jsr __umodhi3
	ret

divide32s:
	ld.w [sp, 2], r2
	ld.w [sp, 4], r3
	jsr __divsi3
	ret

modulus32s:
	ld.w [sp, 2], r2
	ld.w [sp, 4], r3
	jsr __modsi3
	ret

divide32u:
	ld.w [sp, 2], r2
	ld.w [sp, 4], r3
	jsr __udivsi3
	ret

modulus32u:
	ld.w [sp, 2], r2
	ld.w [sp, 4], r3
	jsr __umodsi3
	ret

asr32_1:
	zext r1, r2
	bswap r2, r2
	lsr r0, r0
	lsl r2, r2
	lsl r2, r2
	lsl r2, r2
	lsl r2, r2
	lsl r2, r2
	lsl r2, r2
	lsl r2, r2
	or r0, r2, r0
	asr r1, r1
	ret

lsr32_1:
	zext r1, r2
	bswap r2, r2
	lsr r0, r0
	lsl r2, r2
	lsl r2, r2
	lsl r2, r2
	lsl r2, r2
	lsl r2, r2
	lsl r2, r2
	lsl r2, r2
	or r0, r2, r0
	lsr r1, r1
	ret

lsl32_1:
	lsl r1, r1
	cmp r0, 0
	setcc 5, r2
	or r1, r2, r1
	lsl r0, r0
	ret

add32:
	ld.w [sp, 2], r2
	add r2, r0, r0
	ld.w [sp, 4], r2
	addc r2, r1, r1
	ret

sub32:
	ld.w [sp, 2], r2
	sub r0, r2, r0
	ld.w [sp, 4], r2
	subc r1, r2, r1
	ret

btand32:
	ld.w [sp, 2], r2
	and r2, r0, r0
	ld.w [sp, 4], r2
	and r2, r1, r1
	ret

btor32:
	ld.w [sp, 2], r2
	or r2, r0, r0
	ld.w [sp, 4], r2
	or r2, r1, r1
	ret

btxor32:
	ld.w [sp, 2], r2
	xor r2, r0, r0
	ld.w [sp, 4], r2
	xor r2, r1, r1
	ret

eq32:
	ld.w [sp, 4], r2
	xor r1, r2, r1
	ld.w [sp, 2], r2
	xor r0, r2, r0
	or r0, r1, r0
	setcc 0, r0
	ret

lt32:
	ld.w [sp, 2], r2
	cmp r0, r2
	setcc 3, r0
	ld.w [sp, 4], r2
	cmp r1, r2
	setcc 5, r1
	selcc 0, r0, r1, r0
	ret

gt32:
	ld.w [sp, 2], r2
	cmp r0, r2
	setcc 6, r0
	ld.w [sp, 4], r2
	cmp r1, r2
	setcc 7, r1
	selcc 0, r0, r1, r0
	ret

le32:
	ld.w [sp, 2], r2
	cmp r2, r0
	setcc 2, r0
	ld.w [sp, 4], r2
	cmp r2, r1
	setcc 4, r3
	cmp r1, r2
	selcc 0, r0, r3, r0
	ret

ge32:
	ld.w [sp, 2], r2
	cmp r0, r2
	setcc 2, r0
	ld.w [sp, 4], r2
	cmp r1, r2
	setcc 4, r1
	selcc 0, r0, r1, r0
	ret

-----
file:///Users/joan/Documents-Local/Relay/RelayNou/system.s

memcpy:
	push r5
	push r4
	mov r1, r3
	and r3, 1, r3
	brcc 1, .LBB0_5
	mov r0, r3
	and r3, 1, r3
	brcc 1, .LBB0_5
	mov -2, r3
	and r2, r3, r4
	mov 0, r3
.LBB0_3:
	cmp r3, r4
	brcc 2, .LBB0_8
	ld.w [r1, r3], r5
	st.w r5, [r0, r3]
	add r3, 2, r3
	jmp .LBB0_3
.LBB0_5:
	mov 0, r3
.LBB0_6:
	cmp r2, r3
	brcc 0, .LBB0_10
	ld.sb [r1, r3], r4
	st.b r4, [r0, r3]
	add r3, 1, r3
	jmp .LBB0_6
.LBB0_8:
	and r2, 1, r2
	brcc 0, .LBB0_10
	ld.sb [r1, r3], r1
	st.b r1, [r0, r3]
.LBB0_10:
	pop r4
	pop r5
	ret

__ashrhi3:
	cmp r1, 15
	brcc 1, .LBB1_2
	sextw r0, r0
	jmp .LBB1_5
.LBB1_2:
	bswap r0, r2
	sext r2, r2
	cmp r1, 7
	selcc 7, r2, r0, r0
	and r1, 7, r1
.LBB1_3:
	cmp r1, 0
	brcc 0, .LBB1_5
	sub r1, 1, r1
	asr r0, r0
	jmp .LBB1_3
.LBB1_5:
	ret

__lshrhi3:
	cmp r1, 15
	brcc 1, .LBB2_2
	cmp r0, 0
	setcc 5, r0
	jmp .LBB2_5
.LBB2_2:
	bswap r0, r2
	zext r2, r2
	cmp r1, 7
	selcc 7, r2, r0, r0
	and r1, 7, r1
.LBB2_3:
	cmp r1, 0
	brcc 0, .LBB2_5
	sub r1, 1, r1
	lsr r0, r0
	jmp .LBB2_3
.LBB2_5:
	ret

__ashlhi3:
	zext r0, r2
	bswap r2, r2
	cmp r1, 7
	selcc 7, r2, r0, r0
	and r1, 7, r1
.LBB3_1:
	cmp r1, 0
	brcc 0, .LBB3_3
	sub r1, 1, r1
	lsl r0, r0
	jmp .LBB3_1
.LBB3_3:
	ret

__ashrsi3:
	push r6
	push r5
	push r4
	sub sp, 2, sp
	mov r2, r6
	mov r1, r4
	mov r0, r5
	mov r6, r0
	and r0, 16, r0
	brcc 1, .LBB4_3
	cmp r6, 0
	brcc 0, .LBB4_4
	mov 16, r0
	sub r0, r6, r1
	mov r4, r0
	jsr __ashlhi3
	st.w r0, [sp, 0]
	mov r5, r0
	mov r6, r1
	jsr __lshrhi3
	ld.w [sp, 0], r1
	or r1, r0, r5
	mov r4, r0
	mov r6, r1
	jsr __ashrhi3
	mov r0, r4
	jmp .LBB4_4
.LBB4_3:
	sub r6, 16, r6
	mov r4, r0
	mov r6, r1
	jsr __ashrhi3
	mov r0, r5
	sextw r4, r4
.LBB4_4:
	mov r5, r0
	mov r4, r1
	add sp, 2, sp
	pop r4
	pop r5
	pop r6
	ret

__lshrsi3:
	push r6
	push r5
	push r4
	sub sp, 2, sp
	mov r2, r5
	mov r1, r4
	mov r0, r6
	mov r5, r0
	and r0, 16, r0
	brcc 1, .LBB5_3
	cmp r5, 0
	brcc 0, .LBB5_5
	mov 16, r0
	sub r0, r5, r1
	mov r4, r0
	jsr __ashlhi3
	st.w r0, [sp, 0]
	mov r6, r0
	mov r5, r1
	jsr __lshrhi3
	ld.w [sp, 0], r1
	or r1, r0, r6
	mov r4, r0
	mov r5, r1
	jsr __lshrhi3
	mov r0, r4
	mov 0, r0
	jmp .LBB5_4
.LBB5_3:
	sub r5, 16, r5
	mov r4, r0
	mov r5, r1
	jsr __lshrhi3
	mov r0, r6
	mov 0, r0
	mov 0, r4
.LBB5_4:
	or r0, r6, r6
.LBB5_5:
	mov r6, r0
	mov r4, r1
	add sp, 2, sp
	pop r4
	pop r5
	pop r6
	ret

__ashlsi3:
	push r6
	push r5
	push r4
	mov r2, r5
	mov r0, r4
	mov r5, r0
	and r0, 16, r0
	brcc 1, .LBB6_3
	cmp r5, 0
	brcc 0, .LBB6_5
	mov r1, r0
	mov r5, r1
	jsr __ashlhi3
	mov r0, r6
	mov 16, r0
	sub r0, r5, r1
	mov r4, r0
	jsr __lshrhi3
	or r6, r0, r6
	mov r4, r0
	mov r5, r1
	jsr __ashlhi3
	mov r0, r4
	jmp .LBB6_4
.LBB6_3:
	sub r5, 16, r5
	mov r4, r0
	mov r5, r1
	jsr __ashlhi3
	mov r0, r6
	mov 0, r4
.LBB6_4:
	mov 0, r0
	or r6, r0, r1
.LBB6_5:
	mov r4, r0
	pop r4
	pop r5
	pop r6
	ret

__mulhi3:
	cmp r0, r1
	selcc 6, r1, r0, r2
	selcc 6, r0, r1, r1
	mov 0, r0
.LBB7_1:
	cmp r2, 0
	brcc 0, .LBB7_3
	lsr r2, r3
	and r2, 1, r2
	neg r2, r2
	and r2, r1, r2
	add r2, r0, r0
	lsl r1, r1
	mov r3, r2
	jmp .LBB7_1
.LBB7_3:
	ret

__udivhi3:
	push r6
	push r5
	push r4
	mov 1, r3
.LBB8_1:
	cmp r1, 0
	brcc 5, .LBB8_5
	cmp r1, r0
	brcc 2, .LBB8_5
	cmp r3, 0
	brcc 0, .LBB8_5
	lsl r3, r3
	lsl r1, r1
	jmp .LBB8_1
.LBB8_5:
	mov 0, r4
	mov 0, r2
.LBB8_6:
	cmp r3, 0
	brcc 0, .LBB8_8
	cmp r0, r1
	selcc 3, r4, r1, r5
	selcc 3, r4, r3, r6
	or r2, r6, r2
	sub r0, r5, r0
	lsr r1, r1
	lsr r3, r3
	jmp .LBB8_6
.LBB8_8:
	mov r2, r0
	pop r4
	pop r5
	pop r6
	ret

__umodhi3:
	mov 1, r2
.LBB9_1:
	cmp r1, 0
	brcc 5, .LBB9_6
	cmp r1, r0
	brcc 2, .LBB9_6
	cmp r2, 0
	brcc 0, .LBB9_6
	lsl r2, r2
	lsl r1, r1
	jmp .LBB9_1
.LBB9_5:
	cmp r0, r1
	mov 0, r3
	selcc 3, r3, r1, r3
	sub r0, r3, r0
	lsr r1, r1
	lsr r2, r2
.LBB9_6:
	cmp r2, 0
	brcc 1, .LBB9_5
	ret

__divhi3:
	push r5
	push r4
	mov r1, r4
	mov r0, r5
	sextw r5, r0
	add r5, r0, r1
	xor r1, r0, r0
	sextw r4, r1
	add r4, r1, r2
	xor r2, r1, r1
	jsr __udivhi3
	xor r4, r5, r1
	neg r0, r2
	cmp r1, -1
	selcc 7, r0, r2, r0
	pop r4
	pop r5
	ret

__modhi3:
	push r4
	mov r0, r4
	sextw r4, r0
	add r4, r0, r2
	xor r2, r0, r0
	sextw r1, r2
	add r1, r2, r1
	xor r1, r2, r1
	jsr __umodhi3
	neg r0, r1
	cmp r4, -1
	selcc 7, r0, r1, r0
	pop r4
	ret

__mulsi3:
	push r6
	push r5
	push r4
	sub sp, 4, sp
	mov r1, r5
	cmp r2, r0
	setcc 2, r1
	cmp r3, r5
	setcc 2, r4
	cmp r5, r3
	selcc 0, r1, r4, r1
	and r1, 1, r1
	brcc 1, .LBB12_2
	mov r2, r1
	mov r3, r4
	mov r0, r2
	mov r5, r3
	mov r1, r0
	mov r4, r5
.LBB12_2:
	mov 0, r1
	st.w r1, [sp, 2]
	mov 0, r1
	st.w r1, [sp, 0]
.LBB12_3:
	cmp r5, 0
	brcc 0, .LBB12_5
	lsr r5, r1
	and r5, 1, r5
	neg r5, r5
	and r5, r2, r4
	ld.w [sp, 2], r6
	add r4, r6, r6
	st.w r6, [sp, 2]
	and r5, r3, r4
	ld.w [sp, 0], r5
	addc r4, r5, r5
	st.w r5, [sp, 0]
	lsl r3, r3
	cmp r2, 0
	setcc 5, r4
	or r3, r4, r3
	lsl r2, r2
	mov r1, r5
	jmp .LBB12_3
.LBB12_5:
	ld.w [sp, 2], r6
	ld.w [sp, 0], r1
.LBB12_6:
	cmp r0, 0
	brcc 0, .LBB12_8
	lsr r0, r4
	and r0, 1, r0
	neg r0, r0
	and r0, r2, r5
	add r5, r6, r6
	and r0, r3, r0
	addc r0, r1, r1
	lsl r3, r0
	cmp r2, 0
	setcc 5, r3
	or r0, r3, r3
	lsl r2, r2
	mov r4, r0
	jmp .LBB12_6
.LBB12_8:
	mov r6, r0
	add sp, 4, sp
	pop r4
	pop r5
	pop r6
	ret

__udivsi3:
	push r6
	push r5
	push r4
	sub sp, 16, sp
	mov r2, r4
	st.w r1, [sp, 14]
	st.w r0, [sp, 12]
	mov 0, r2
	mov 1, r6
.LBB13_1:
	cmp r3, 0
	brcc 5, .LBB13_5
	ld.w [sp, 12], r0
	cmp r4, r0
	setcc 2, r5
	ld.w [sp, 14], r0
	cmp r3, r0
	mov r6, r0
	setcc 2, r6
	selcc 0, r5, r6, r5
	mov r0, r6
	and r5, 1, r5
	brcc 1, .LBB13_5
	or r6, r2, r5
	brcc 0, .LBB13_5
	lsl r2, r1
	cmp r6, 0
	setcc 5, r5
	or r1, r5, r2
	lsl r3, r0
	cmp r4, 0
	setcc 5, r5
	or r0, r5, r3
	lsl r6, r6
	lsl r4, r4
	jmp .LBB13_1
.LBB13_5:
	mov r3, r1
	mov 0, r0
	st.w r0, [sp, 8]
	mov 0, r0
	st.w r0, [sp, 6]
.LBB13_6:
	mov r6, r3
	or r3, r2, r6
	brcc 0, .LBB13_8
	ld.w [sp, 12], r6
	cmp r6, r4
	setcc 3, r0
	st.w r4, [sp, 4]
	ld.w [sp, 14], r4
	cmp r4, r1
	setcc 3, r5
	selcc 0, r0, r5, r5
	cmp r5, 0
	mov 0, r0
	selcc 1, r0, r3, r5
	st.w r5, [sp, 2]
	selcc 1, r0, r2, r5
	st.w r5, [sp, 0]
	st.w r2, [sp, 10]
	selcc 1, r0, r1, r5
	ld.w [sp, 4], r2
	selcc 1, r0, r2, r0
	sub r6, r0, r6
	st.w r6, [sp, 12]
	subc r4, r5, r4
	st.w r4, [sp, 14]
	ld.w [sp, 6], r0
	ld.w [sp, 0], r4
	or r0, r4, r0
	st.w r0, [sp, 6]
	ld.w [sp, 8], r0
	ld.w [sp, 2], r4
	or r0, r4, r0
	st.w r0, [sp, 8]
	zext r1, r0
	bswap r0, r0
	lsr r2, r2
	lsl r0, r0
	lsl r0, r0
	lsl r0, r0
	lsl r0, r0
	lsl r0, r0
	lsl r0, r0
	lsl r0, r0
	or r2, r0, r4
	ld.w [sp, 10], r0
	zext r0, r0
	bswap r0, r0
	lsr r3, r3
	lsl r0, r0
	lsl r0, r0
	lsl r0, r0
	lsl r0, r0
	lsl r0, r0
	lsl r0, r0
	lsl r0, r0
	or r3, r0, r6
	ld.w [sp, 10], r2
	lsr r1, r1
	lsr r2, r2
	jmp .LBB13_6
.LBB13_8:
	ld.w [sp, 8], r0
	ld.w [sp, 6], r1
	add sp, 16, sp
	pop r4
	pop r5
	pop r6
	ret

__umodsi3:
	push r6
	push r5
	push r4
	sub sp, 6, sp
	st.w r1, [sp, 4]
	st.w r0, [sp, 2]
	mov 0, r0
	mov 1, r5
.LBB14_1:
	cmp r3, 0
	brcc 5, .LBB14_6
	ld.w [sp, 2], r1
	cmp r2, r1
	setcc 2, r6
	ld.w [sp, 4], r4
	cmp r3, r4
	setcc 2, r4
	selcc 0, r6, r4, r4
	and r4, 1, r4
	brcc 1, .LBB14_6
	or r5, r0, r4
	brcc 0, .LBB14_6
	lsl r0, r1
	cmp r5, 0
	setcc 5, r4
	or r1, r4, r0
	lsl r3, r3
	cmp r2, 0
	setcc 5, r4
	or r3, r4, r3
	lsl r5, r5
	lsl r2, r2
	jmp .LBB14_1
.LBB14_5:
	st.w r5, [sp, 0]
	mov r0, r5
	ld.w [sp, 2], r0
	cmp r0, r2
	setcc 3, r4
	ld.w [sp, 4], r1
	cmp r1, r3
	setcc 3, r6
	selcc 0, r4, r6, r4
	cmp r4, 0
	mov 0, r4
	selcc 1, r4, r3, r6
	selcc 1, r4, r2, r4
	sub r0, r4, r0
	st.w r0, [sp, 2]
	mov r5, r0
	subc r1, r6, r1
	st.w r1, [sp, 4]
	zext r3, r4
	bswap r4, r4
	lsr r2, r2
	lsl r4, r4
	lsl r4, r4
	lsl r4, r4
	lsl r4, r4
	lsl r4, r4
	lsl r4, r4
	lsl r4, r4
	or r2, r4, r2
	zext r0, r4
	bswap r4, r4
	ld.w [sp, 0], r1
	lsr r1, r5
	lsl r4, r4
	lsl r4, r4
	lsl r4, r4
	lsl r4, r4
	lsl r4, r4
	lsl r4, r4
	lsl r4, r4
	or r5, r4, r5
	lsr r3, r3
	lsr r0, r0
.LBB14_6:
	or r5, r0, r4
	brcc 1, .LBB14_5
	ld.w [sp, 2], r0
	ld.w [sp, 4], r1
	add sp, 6, sp
	pop r4
	pop r5
	pop r6
	ret

__divsi3:
	push r6
	push r5
	push r4
	sub sp, 2, sp
	mov r3, r4
	mov r1, r5
	mov 0, r6
	sub r6, r0, r1
	subc r6, r5, r3
	cmp r5, 0
	selcc 5, r1, r0, r0
	st.w r0, [sp, 0]
	selcc 5, r3, r5, r1
	sub r6, r2, r3
	subc r6, r4, r0
	cmp r4, 0
	selcc 5, r3, r2, r2
	selcc 5, r0, r4, r3
	ld.w [sp, 0], r0
	jsr __udivsi3
	xor r4, r5, r2
	sub r6, r0, r3
	subc r6, r1, r4
	cmp r2, -1
	selcc 7, r0, r3, r0
	selcc 7, r1, r4, r1
	add sp, 2, sp
	pop r4
	pop r5
	pop r6
	ret

__modsi3:
	push r6
	push r5
	push r4
	mov r1, r4
	mov 0, r5
	sub r5, r2, r1
	subc r5, r3, r6
	cmp r3, 0
	selcc 5, r1, r2, r2
	selcc 5, r6, r3, r3
	sub r5, r0, r1
	subc r5, r4, r6
	cmp r4, 0
	selcc 5, r1, r0, r0
	selcc 5, r6, r4, r1
	jsr __umodsi3
	sub r5, r0, r2
	subc r5, r1, r3
	cmp r4, -1
	selcc 7, r0, r2, r0
	selcc 7, r1, r3, r1
	pop r4
	pop r5
	pop r6
	ret

-----
file:/Users/joan/Documents-Local/Relay/RelayNou/testfile.c74

Program Code:

Source: testfile.c
00000 : 1111000010101010  jsr __ashrhi3  @Value:+170
00001 : 0000000110000000  ret
00002 : 1111000010110111  jsr __lshrhi3  @Value:+183
00003 : 0000000110000000  ret
00004 : 1111000011000101  jsr __ashlhi3  @Value:+197
00005 : 0000000110000000  ret
00006 : 1111000101000110  jsr __mulhi3  @Value:+326
00007 : 0000000110000000  ret
00008 : 1111000101000100  jsr __mulhi3  @Value:+324
00009 : 0000000110000000  ret
00010 : 0100000010111010  ld.w [sp, 2], r2
00011 : 0100000100111011  ld.w [sp, 4], r3
00012 : 1111000110100000  jsr __mulsi3  @Value:+416
00013 : 0000000110000000  ret
00014 : 0100000010111010  ld.w [sp, 2], r2
00015 : 0100000100111011  ld.w [sp, 4], r3
00016 : 1111000110011100  jsr __mulsi3  @Value:+412
00017 : 0000000110000000  ret
00018 : 1111000101111010  jsr __divhi3  @Value:+378
00019 : 0000000110000000  ret
00020 : 1111000110001010  jsr __modhi3  @Value:+394
00021 : 0000000110000000  ret
00022 : 1111000101000101  jsr __udivhi3  @Value:+325
00023 : 0000000110000000  ret
00024 : 1111000101100001  jsr __umodhi3  @Value:+353
00025 : 0000000110000000  ret
00026 : 0100000010111010  ld.w [sp, 2], r2
00027 : 0100000100111011  ld.w [sp, 4], r3
00028 : 1111001010010010  jsr __divsi3  @Value:+658
00029 : 0000000110000000  ret
00030 : 0100000010111010  ld.w [sp, 2], r2
00031 : 0100000100111011  ld.w [sp, 4], r3
00032 : 1111001010101101  jsr __modsi3  @Value:+685
00033 : 0000000110000000  ret
00034 : 0100000010111010  ld.w [sp, 2], r2
00035 : 0100000100111011  ld.w [sp, 4], r3
00036 : 1111000111001011  jsr __udivsi3  @Value:+459
00037 : 0000000110000000  ret
00038 : 0100000010111010  ld.w [sp, 2], r2
00039 : 0100000100111011  ld.w [sp, 4], r3
00040 : 1111001000110010  jsr __umodsi3  @Value:+562
00041 : 0000000110000000  ret
00042 : 0000100000001010  zext r1, r2
00043 : 0001000000010010  bswap r2, r2
00044 : 0000000001000000  lsr r0, r0
00045 : 0000010001010010  lsl r2, r2
00046 : 0000010001010010  lsl r2, r2
00047 : 0000010001010010  lsl r2, r2
00048 : 0000010001010010  lsl r2, r2
00049 : 0000010001010010  lsl r2, r2
00050 : 0000010001010010  lsl r2, r2
00051 : 0000010001010010  lsl r2, r2
00052 : 0010100000010000  or r0, r2, r0
00053 : 0000100001001001  asr r1, r1
00054 : 0000000110000000  ret
00055 : 0000100000001010  zext r1, r2
00056 : 0001000000010010  bswap r2, r2
00057 : 0000000001000000  lsr r0, r0
00058 : 0000010001010010  lsl r2, r2
00059 : 0000010001010010  lsl r2, r2
00060 : 0000010001010010  lsl r2, r2
00061 : 0000010001010010  lsl r2, r2
00062 : 0000010001010010  lsl r2, r2
00063 : 0000010001010010  lsl r2, r2
00064 : 0000010001010010  lsl r2, r2
00065 : 0010100000010000  or r0, r2, r0
00066 : 0000000001001001  lsr r1, r1
00067 : 0000000110000000  ret
00068 : 0000010001001001  lsl r1, r1
00069 : 1000100000000000  cmp r0, 0
00070 : 0001010111000010  setcc 5, r2
00071 : 0010100001010001  or r1, r2, r1
00072 : 0000010001000000  lsl r0, r0
00073 : 0000000110000000  ret
00074 : 0100000010111010  ld.w [sp, 2], r2
00075 : 0010000010000000  add r2, r0, r0
00076 : 0100000100111010  ld.w [sp, 4], r2
00077 : 0010001010001001  addc r2, r1, r1
00078 : 0000000110000000  ret
00079 : 0100000010111010  ld.w [sp, 2], r2
00080 : 0010010000010000  sub r0, r2, r0
00081 : 0100000100111010  ld.w [sp, 4], r2
00082 : 0010011001010001  subc r1, r2, r1
00083 : 0000000110000000  ret
00084 : 0100000010111010  ld.w [sp, 2], r2
00085 : 0010101010000000  and r2, r0, r0
00086 : 0100000100111010  ld.w [sp, 4], r2
00087 : 0010101010001001  and r2, r1, r1
00088 : 0000000110000000  ret
00089 : 0100000010111010  ld.w [sp, 2], r2
00090 : 0010100010000000  or r2, r0, r0
00091 : 0100000100111010  ld.w [sp, 4], r2
00092 : 0010100010001001  or r2, r1, r1
00093 : 0000000110000000  ret
00094 : 0100000010111010  ld.w [sp, 2], r2
00095 : 0010110010000000  xor r2, r0, r0
00096 : 0100000100111010  ld.w [sp, 4], r2
00097 : 0010110010001001  xor r2, r1, r1
00098 : 0000000110000000  ret
00099 : 0100000100111010  ld.w [sp, 4], r2
00100 : 0010110001010001  xor r1, r2, r1
00101 : 0100000010111010  ld.w [sp, 2], r2
00102 : 0010110000010000  xor r0, r2, r0
00103 : 0010100000001000  or r0, r1, r0
00104 : 0000000111000000  setcc 0, r0
00105 : 0000000110000000  ret
00106 : 0100000010111010  ld.w [sp, 2], r2
00107 : 0000010000000010  cmp r0, r2
00108 : 0000110111000000  setcc 3, r0
00109 : 0100000100111010  ld.w [sp, 4], r2
00110 : 0000010000001010  cmp r1, r2
00111 : 0001010111000001  setcc 5, r1
00112 : 0000001000001000  selcc 0, r0, r1, r0
00113 : 0000000110000000  ret
00114 : 0100000010111010  ld.w [sp, 2], r2
00115 : 0000010000000010  cmp r0, r2
00116 : 0001100111000000  setcc 6, r0
00117 : 0100000100111010  ld.w [sp, 4], r2
00118 : 0000010000001010  cmp r1, r2
00119 : 0001110111000001  setcc 7, r1
00120 : 0000001000001000  selcc 0, r0, r1, r0
00121 : 0000000110000000  ret
00122 : 0100000010111010  ld.w [sp, 2], r2
00123 : 0000010000010000  cmp r2, r0
00124 : 0000100111000000  setcc 2, r0
00125 : 0100000100111010  ld.w [sp, 4], r2
00126 : 0000010000010001  cmp r2, r1
00127 : 0001000111000011  setcc 4, r3
00128 : 0000010000001010  cmp r1, r2
00129 : 0000001000011000  selcc 0, r0, r3, r0
00130 : 0000000110000000  ret
00131 : 0100000010111010  ld.w [sp, 2], r2
00132 : 0000010000000010  cmp r0, r2
00133 : 0000100111000000  setcc 2, r0
00134 : 0100000100111010  ld.w [sp, 4], r2
00135 : 0000010000001010  cmp r1, r2
00136 : 0001000111000001  setcc 4, r1
00137 : 0000001000001000  selcc 0, r0, r1, r0
00138 : 0000000110000000  ret

Source: system.c
00139 : 0000100100000101  push r5
00140 : 0000100100000100  push r4
00141 : 0000000000001011  mov r1, r3
00142 : 1010000000001011  and r3, 1, r3
00143 : 1111111100001101  brcc 1, .LBB0_5  @Value:+13
00144 : 0000000000000011  mov r0, r3
00145 : 1010000000001011  and r3, 1, r3
00146 : 1111111100001010  brcc 1, .LBB0_5  @Value:+10
00147 : 1000011111110011  mov -2, r3
00148 : 0010101010011100  and r2, r3, r4
00149 : 1000000000000011  mov 0, r3
00150 : 0000010000011100  cmp r3, r4
00151 : 1111111100001100  brcc 2, .LBB0_8  @Value:+12
00152 : 0011000001011101  ld.w [r1, r3], r5
00153 : 0011100011101000  st.w r5, [r0, r3]
00154 : 1001000000010011  add r3, 2, r3
00155 : 1111111111111011  jmp .LBB0_3  @Value:-5
00156 : 1000000000000011  mov 0, r3
00157 : 0000010000010011  cmp r2, r3
00158 : 1111111100001001  brcc 0, .LBB0_10  @Value:+9
00159 : 0011011001011100  ld.sb [r1, r3], r4
00160 : 0011101011100000  st.b r4, [r0, r3]
00161 : 1001000000001011  add r3, 1, r3
00162 : 1111111111111011  jmp .LBB0_6  @Value:-5
00163 : 1010000000001010  and r2, 1, r2
00164 : 1111111100000011  brcc 0, .LBB0_10  @Value:+3
00165 : 0011011001011001  ld.sb [r1, r3], r1
00166 : 0011101011001000  st.b r1, [r0, r3]
00167 : 0000110100000100  pop r4
00168 : 0000110100000101  pop r5
00169 : 0000000110000000  ret
00170 : 1000100001111001  cmp r1, 15
00171 : 1111111100000011  brcc 1, .LBB1_2  @Value:+3
00172 : 0001010000000000  sextw r0, r0
00173 : 1111000000001011  jmp .LBB1_5  @Value:+11
00174 : 0001000000000010  bswap r0, r2
00175 : 0000110000010010  sext r2, r2
00176 : 1000100000111001  cmp r1, 7
00177 : 0001111010000000  selcc 7, r2, r0, r0
00178 : 1010000000111001  and r1, 7, r1
00179 : 1000100000000001  cmp r1, 0
00180 : 1111111100000100  brcc 0, .LBB1_5  @Value:+4
00181 : 1001100000001001  sub r1, 1, r1
00182 : 0000100001000000  asr r0, r0
00183 : 1111111111111100  jmp .LBB1_3  @Value:-4
00184 : 0000000110000000  ret
00185 : 1000100001111001  cmp r1, 15
00186 : 1111111100000100  brcc 1, .LBB2_2  @Value:+4
00187 : 1000100000000000  cmp r0, 0
00188 : 0001010111000000  setcc 5, r0
00189 : 1111000000001011  jmp .LBB2_5  @Value:+11
00190 : 0001000000000010  bswap r0, r2
00191 : 0000100000010010  zext r2, r2
00192 : 1000100000111001  cmp r1, 7
00193 : 0001111010000000  selcc 7, r2, r0, r0
00194 : 1010000000111001  and r1, 7, r1
00195 : 1000100000000001  cmp r1, 0
00196 : 1111111100000100  brcc 0, .LBB2_5  @Value:+4
00197 : 1001100000001001  sub r1, 1, r1
00198 : 0000000001000000  lsr r0, r0
00199 : 1111111111111100  jmp .LBB2_3  @Value:-4
00200 : 0000000110000000  ret
00201 : 0000100000000010  zext r0, r2
00202 : 0001000000010010  bswap r2, r2
00203 : 1000100000111001  cmp r1, 7
00204 : 0001111010000000  selcc 7, r2, r0, r0
00205 : 1010000000111001  and r1, 7, r1
00206 : 1000100000000001  cmp r1, 0
00207 : 1111111100000100  brcc 0, .LBB3_3  @Value:+4
00208 : 1001100000001001  sub r1, 1, r1
00209 : 0000010001000000  lsl r0, r0
00210 : 1111111111111100  jmp .LBB3_1  @Value:-4
00211 : 0000000110000000  ret
00212 : 0000100100000110  push r6
00213 : 0000100100000101  push r5
00214 : 0000100100000100  push r4
00215 : 1001100000010111  sub sp, 2, sp
00216 : 0000000000010110  mov r2, r6
00217 : 0000000000001100  mov r1, r4
00218 : 0000000000000101  mov r0, r5
00219 : 0000000000110000  mov r6, r0
00220 : 1010000010000000  and r0, 16, r0
00221 : 1111111100010010  brcc 1, .LBB4_3  @Value:+18
00222 : 1000100000000110  cmp r6, 0
00223 : 1111111100010110  brcc 0, .LBB4_4  @Value:+22
00224 : 1000000010000000  mov 16, r0
00225 : 0010010000110001  sub r0, r6, r1
00226 : 0000000000100000  mov r4, r0
00227 : 1111111111100110  jsr __ashlhi3  @Value:-26
00228 : 0110000000111000  st.w r0, [sp, 0]
00229 : 0000000000101000  mov r5, r0
00230 : 0000000000110001  mov r6, r1
00231 : 1111111111010010  jsr __lshrhi3  @Value:-46
00232 : 0100000000111001  ld.w [sp, 0], r1
00233 : 0010100001000101  or r1, r0, r5
00234 : 0000000000100000  mov r4, r0
00235 : 0000000000110001  mov r6, r1
00236 : 1111111110111110  jsr __ashrhi3  @Value:-66
00237 : 0000000000000100  mov r0, r4
00238 : 1111000000000111  jmp .LBB4_4  @Value:+7
00239 : 1001100010000110  sub r6, 16, r6
00240 : 0000000000100000  mov r4, r0
00241 : 0000000000110001  mov r6, r1
00242 : 1111111110111000  jsr __ashrhi3  @Value:-72
00243 : 0000000000000101  mov r0, r5
00244 : 0001010000100100  sextw r4, r4
00245 : 0000000000101000  mov r5, r0
00246 : 0000000000100001  mov r4, r1
00247 : 1001000000010111  add sp, 2, sp
00248 : 0000110100000100  pop r4
00249 : 0000110100000101  pop r5
00250 : 0000110100000110  pop r6
00251 : 0000000110000000  ret
00252 : 0000100100000110  push r6
00253 : 0000100100000101  push r5
00254 : 0000100100000100  push r4
00255 : 1001100000010111  sub sp, 2, sp
00256 : 0000000000010101  mov r2, r5
00257 : 0000000000001100  mov r1, r4
00258 : 0000000000000110  mov r0, r6
00259 : 0000000000101000  mov r5, r0
00260 : 1010000010000000  and r0, 16, r0
00261 : 1111111100010011  brcc 1, .LBB5_3  @Value:+19
00262 : 1000100000000101  cmp r5, 0
00263 : 1111111100011001  brcc 0, .LBB5_5  @Value:+25
00264 : 1000000010000000  mov 16, r0
00265 : 0010010000101001  sub r0, r5, r1
00266 : 0000000000100000  mov r4, r0
00267 : 1111111110111110  jsr __ashlhi3  @Value:-66
00268 : 0110000000111000  st.w r0, [sp, 0]
00269 : 0000000000110000  mov r6, r0
00270 : 0000000000101001  mov r5, r1
00271 : 1111111110101010  jsr __lshrhi3  @Value:-86
00272 : 0100000000111001  ld.w [sp, 0], r1
00273 : 0010100001000110  or r1, r0, r6
00274 : 0000000000100000  mov r4, r0
00275 : 0000000000101001  mov r5, r1
00276 : 1111111110100101  jsr __lshrhi3  @Value:-91
00277 : 0000000000000100  mov r0, r4
00278 : 1000000000000000  mov 0, r0
00279 : 1111000000001000  jmp .LBB5_4  @Value:+8
00280 : 1001100010000101  sub r5, 16, r5
00281 : 0000000000100000  mov r4, r0
00282 : 0000000000101001  mov r5, r1
00283 : 1111111110011110  jsr __lshrhi3  @Value:-98
00284 : 0000000000000110  mov r0, r6
00285 : 1000000000000000  mov 0, r0
00286 : 1000000000000100  mov 0, r4
00287 : 0010100000110110  or r0, r6, r6
00288 : 0000000000110000  mov r6, r0
00289 : 0000000000100001  mov r4, r1
00290 : 1001000000010111  add sp, 2, sp
00291 : 0000110100000100  pop r4
00292 : 0000110100000101  pop r5
00293 : 0000110100000110  pop r6
00294 : 0000000110000000  ret
00295 : 0000100100000110  push r6
00296 : 0000100100000101  push r5
00297 : 0000100100000100  push r4
00298 : 0000000000010101  mov r2, r5
00299 : 0000000000000100  mov r0, r4
00300 : 0000000000101000  mov r5, r0
00301 : 1010000010000000  and r0, 16, r0
00302 : 1111111100010001  brcc 1, .LBB6_3  @Value:+17
00303 : 1000100000000101  cmp r5, 0
00304 : 1111111100010111  brcc 0, .LBB6_5  @Value:+23
00305 : 0000000000001000  mov r1, r0
00306 : 0000000000101001  mov r5, r1
00307 : 1111111110010110  jsr __ashlhi3  @Value:-106
00308 : 0000000000000110  mov r0, r6
00309 : 1000000010000000  mov 16, r0
00310 : 0010010000101001  sub r0, r5, r1
00311 : 0000000000100000  mov r4, r0
00312 : 1111111110000001  jsr __lshrhi3  @Value:-127
00313 : 0010100110000110  or r6, r0, r6
00314 : 0000000000100000  mov r4, r0
00315 : 0000000000101001  mov r5, r1
00316 : 1111111110001101  jsr __ashlhi3  @Value:-115
00317 : 0000000000000100  mov r0, r4
00318 : 1111000000000111  jmp .LBB6_4  @Value:+7
00319 : 1001100010000101  sub r5, 16, r5
00320 : 0000000000100000  mov r4, r0
00321 : 0000000000101001  mov r5, r1
00322 : 1111111110000111  jsr __ashlhi3  @Value:-121
00323 : 0000000000000110  mov r0, r6
00324 : 1000000000000100  mov 0, r4
00325 : 1000000000000000  mov 0, r0
00326 : 0010100110000001  or r6, r0, r1
00327 : 0000000000100000  mov r4, r0
00328 : 0000110100000100  pop r4
00329 : 0000110100000101  pop r5
00330 : 0000110100000110  pop r6
00331 : 0000000110000000  ret
00332 : 0000010000000001  cmp r0, r1
00333 : 0001101001000010  selcc 6, r1, r0, r2
00334 : 0001101000001001  selcc 6, r0, r1, r1
00335 : 1000000000000000  mov 0, r0
00336 : 1000100000000010  cmp r2, 0
00337 : 1111111100001001  brcc 0, .LBB7_3  @Value:+9
00338 : 0000000001010011  lsr r2, r3
00339 : 1010000000001010  and r2, 1, r2
00340 : 0001010001010010  neg r2, r2
00341 : 0010101010001010  and r2, r1, r2
00342 : 0010000010000000  add r2, r0, r0
00343 : 0000010001001001  lsl r1, r1
00344 : 0000000000011010  mov r3, r2
00345 : 1111111111110111  jmp .LBB7_1  @Value:-9
00346 : 0000000110000000  ret
00347 : 0000100100000110  push r6
00348 : 0000100100000101  push r5
00349 : 0000100100000100  push r4
00350 : 1000000000001011  mov 1, r3
00351 : 1000100000000001  cmp r1, 0
00352 : 1111111100001000  brcc 5, .LBB8_5  @Value:+8
00353 : 0000010000001000  cmp r1, r0
00354 : 1111111100000110  brcc 2, .LBB8_5  @Value:+6
00355 : 1000100000000011  cmp r3, 0
00356 : 1111111100000100  brcc 0, .LBB8_5  @Value:+4
00357 : 0000010001011011  lsl r3, r3
00358 : 0000010001001001  lsl r1, r1
00359 : 1111111111111000  jmp .LBB8_1  @Value:-8
00360 : 1000000000000100  mov 0, r4
00361 : 1000000000000010  mov 0, r2
00362 : 1000100000000011  cmp r3, 0
00363 : 1111111100001001  brcc 0, .LBB8_8  @Value:+9
00364 : 0000010000000001  cmp r0, r1
00365 : 0000111100001101  selcc 3, r4, r1, r5
00366 : 0000111100011110  selcc 3, r4, r3, r6
00367 : 0010100010110010  or r2, r6, r2
00368 : 0010010000101000  sub r0, r5, r0
00369 : 0000000001001001  lsr r1, r1
00370 : 0000000001011011  lsr r3, r3
00371 : 1111111111110111  jmp .LBB8_6  @Value:-9
00372 : 0000000000010000  mov r2, r0
00373 : 0000110100000100  pop r4
00374 : 0000110100000101  pop r5
00375 : 0000110100000110  pop r6
00376 : 0000000110000000  ret
00377 : 1000000000001010  mov 1, r2
00378 : 1000100000000001  cmp r1, 0
00379 : 1111111100001110  brcc 5, .LBB9_6  @Value:+14
00380 : 0000010000001000  cmp r1, r0
00381 : 1111111100001100  brcc 2, .LBB9_6  @Value:+12
00382 : 1000100000000010  cmp r2, 0
00383 : 1111111100001010  brcc 0, .LBB9_6  @Value:+10
00384 : 0000010001010010  lsl r2, r2
00385 : 0000010001001001  lsl r1, r1
00386 : 1111111111111000  jmp .LBB9_1  @Value:-8
00387 : 0000010000000001  cmp r0, r1
00388 : 1000000000000011  mov 0, r3
00389 : 0000111011001011  selcc 3, r3, r1, r3
00390 : 0010010000011000  sub r0, r3, r0
00391 : 0000000001001001  lsr r1, r1
00392 : 0000000001010010  lsr r2, r2
00393 : 1000100000000010  cmp r2, 0
00394 : 1111111111111001  brcc 1, .LBB9_5  @Value:-7
00395 : 0000000110000000  ret
00396 : 0000100100000101  push r5
00397 : 0000100100000100  push r4
00398 : 0000000000001100  mov r1, r4
00399 : 0000000000000101  mov r0, r5
00400 : 0001010000101000  sextw r5, r0
00401 : 0010000101000001  add r5, r0, r1
00402 : 0010110001000000  xor r1, r0, r0
00403 : 0001010000100001  sextw r4, r1
00404 : 0010000100001010  add r4, r1, r2
00405 : 0010110010001001  xor r2, r1, r1
00406 : 1111111111000101  jsr __udivhi3  @Value:-59
00407 : 0010110100101001  xor r4, r5, r1
00408 : 0001010001000010  neg r0, r2
00409 : 1000111111111001  cmp r1, -1
00410 : 0001111000010000  selcc 7, r0, r2, r0
00411 : 0000110100000100  pop r4
00412 : 0000110100000101  pop r5
00413 : 0000000110000000  ret
00414 : 0000100100000100  push r4
00415 : 0000000000000100  mov r0, r4
00416 : 0001010000100000  sextw r4, r0
00417 : 0010000100000010  add r4, r0, r2
00418 : 0010110010000000  xor r2, r0, r0
00419 : 0001010000001010  sextw r1, r2
00420 : 0010000001010001  add r1, r2, r1
00421 : 0010110001010001  xor r1, r2, r1
00422 : 1111111111010011  jsr __umodhi3  @Value:-45
00423 : 0001010001000001  neg r0, r1
00424 : 1000111111111100  cmp r4, -1
00425 : 0001111000001000  selcc 7, r0, r1, r0
00426 : 0000110100000100  pop r4
00427 : 0000000110000000  ret
00428 : 0000100100000110  push r6
00429 : 0000100100000101  push r5
00430 : 0000100100000100  push r4
00431 : 1001100000100111  sub sp, 4, sp
00432 : 0000000000001101  mov r1, r5
00433 : 0000010000010000  cmp r2, r0
00434 : 0000100111000001  setcc 2, r1
00435 : 0000010000011101  cmp r3, r5
00436 : 0000100111000100  setcc 2, r4
00437 : 0000010000101011  cmp r5, r3
00438 : 0000001001100001  selcc 0, r1, r4, r1
00439 : 1010000000001001  and r1, 1, r1
00440 : 1111111100000111  brcc 1, .LBB12_2  @Value:+7
00441 : 0000000000010001  mov r2, r1
00442 : 0000000000011100  mov r3, r4
00443 : 0000000000000010  mov r0, r2
00444 : 0000000000101011  mov r5, r3
00445 : 0000000000001000  mov r1, r0
00446 : 0000000000100101  mov r4, r5
00447 : 1000000000000001  mov 0, r1
00448 : 0110000010111001  st.w r1, [sp, 2]
00449 : 1000000000000001  mov 0, r1
00450 : 0110000000111001  st.w r1, [sp, 0]
00451 : 1000100000000101  cmp r5, 0
00452 : 1111111100010011  brcc 0, .LBB12_5  @Value:+19
00453 : 0000000001101001  lsr r5, r1
00454 : 1010000000001101  and r5, 1, r5
00455 : 0001010001101101  neg r5, r5
00456 : 0010101101010100  and r5, r2, r4
00457 : 0100000010111110  ld.w [sp, 2], r6
00458 : 0010000100110110  add r4, r6, r6
00459 : 0110000010111110  st.w r6, [sp, 2]
00460 : 0010101101011100  and r5, r3, r4
00461 : 0100000000111101  ld.w [sp, 0], r5
00462 : 0010001100101101  addc r4, r5, r5
00463 : 0110000000111101  st.w r5, [sp, 0]
00464 : 0000010001011011  lsl r3, r3
00465 : 1000100000000010  cmp r2, 0
00466 : 0001010111000100  setcc 5, r4
00467 : 0010100011100011  or r3, r4, r3
00468 : 0000010001010010  lsl r2, r2
00469 : 0000000000001101  mov r1, r5
00470 : 1111111111101101  jmp .LBB12_3  @Value:-19
00471 : 0100000010111110  ld.w [sp, 2], r6
00472 : 0100000000111001  ld.w [sp, 0], r1
00473 : 1000100000000000  cmp r0, 0
00474 : 1111111100001111  brcc 0, .LBB12_8  @Value:+15
00475 : 0000000001000100  lsr r0, r4
00476 : 1010000000001000  and r0, 1, r0
00477 : 0001010001000000  neg r0, r0
00478 : 0010101000010101  and r0, r2, r5
00479 : 0010000101110110  add r5, r6, r6
00480 : 0010101000011000  and r0, r3, r0
00481 : 0010001000001001  addc r0, r1, r1
00482 : 0000010001011000  lsl r3, r0
00483 : 1000100000000010  cmp r2, 0
00484 : 0001010111000011  setcc 5, r3
00485 : 0010100000011011  or r0, r3, r3
00486 : 0000010001010010  lsl r2, r2
00487 : 0000000000100000  mov r4, r0
00488 : 1111111111110001  jmp .LBB12_6  @Value:-15
00489 : 0000000000110000  mov r6, r0
00490 : 1001000000100111  add sp, 4, sp
00491 : 0000110100000100  pop r4
00492 : 0000110100000101  pop r5
00493 : 0000110100000110  pop r6
00494 : 0000000110000000  ret
00495 : 0000100100000110  push r6
00496 : 0000100100000101  push r5
00497 : 0000100100000100  push r4
00498 : 1001100010000111  sub sp, 16, sp
00499 : 0000000000010100  mov r2, r4
00500 : 0110001110111001  st.w r1, [sp, 14]
00501 : 0110001100111000  st.w r0, [sp, 12]
00502 : 1000000000000010  mov 0, r2
00503 : 1000000000001110  mov 1, r6
00504 : 1000100000000011  cmp r3, 0
00505 : 1111111100011001  brcc 5, .LBB13_5  @Value:+25
00506 : 0100001100111000  ld.w [sp, 12], r0
00507 : 0000010000100000  cmp r4, r0
00508 : 0000100111000101  setcc 2, r5
00509 : 0100001110111000  ld.w [sp, 14], r0
00510 : 0000010000011000  cmp r3, r0
00511 : 0000000000110000  mov r6, r0
00512 : 0000100111000110  setcc 2, r6
00513 : 0000001101110101  selcc 0, r5, r6, r5
00514 : 0000000000000110  mov r0, r6
00515 : 1010000000001101  and r5, 1, r5
00516 : 1111111100001110  brcc 1, .LBB13_5  @Value:+14
00517 : 0010100110010101  or r6, r2, r5
00518 : 1111111100001100  brcc 0, .LBB13_5  @Value:+12
00519 : 0000010001010001  lsl r2, r1
00520 : 1000100000000110  cmp r6, 0
00521 : 0001010111000101  setcc 5, r5
00522 : 0010100001101010  or r1, r5, r2
00523 : 0000010001011000  lsl r3, r0
00524 : 1000100000000100  cmp r4, 0
00525 : 0001010111000101  setcc 5, r5
00526 : 0010100000101011  or r0, r5, r3
00527 : 0000010001110110  lsl r6, r6
00528 : 0000010001100100  lsl r4, r4
00529 : 1111111111100111  jmp .LBB13_1  @Value:-25
00530 : 0000000000011001  mov r3, r1
00531 : 1000000000000000  mov 0, r0
00532 : 0110001000111000  st.w r0, [sp, 8]
00533 : 1000000000000000  mov 0, r0
00534 : 0110000110111000  st.w r0, [sp, 6]
00535 : 0000000000110011  mov r6, r3
00536 : 0010100011010110  or r3, r2, r6
00537 : 1111111100111010  brcc 0, .LBB13_8  @Value:+58
00538 : 0100001100111110  ld.w [sp, 12], r6
00539 : 0000010000110100  cmp r6, r4
00540 : 0000110111000000  setcc 3, r0
00541 : 0110000100111100  st.w r4, [sp, 4]
00542 : 0100001110111100  ld.w [sp, 14], r4
00543 : 0000010000100001  cmp r4, r1
00544 : 0000110111000101  setcc 3, r5
00545 : 0000001000101101  selcc 0, r0, r5, r5
00546 : 1000100000000101  cmp r5, 0
00547 : 1000000000000000  mov 0, r0
00548 : 0000011000011101  selcc 1, r0, r3, r5
00549 : 0110000010111101  st.w r5, [sp, 2]
00550 : 0000011000010101  selcc 1, r0, r2, r5
00551 : 0110000000111101  st.w r5, [sp, 0]
00552 : 0110001010111010  st.w r2, [sp, 10]
00553 : 0000011000001101  selcc 1, r0, r1, r5
00554 : 0100000100111010  ld.w [sp, 4], r2
00555 : 0000011000010000  selcc 1, r0, r2, r0
00556 : 0010010110000110  sub r6, r0, r6
00557 : 0110001100111110  st.w r6, [sp, 12]
00558 : 0010011100101100  subc r4, r5, r4
00559 : 0110001110111100  st.w r4, [sp, 14]
00560 : 0100000110111000  ld.w [sp, 6], r0
00561 : 0100000000111100  ld.w [sp, 0], r4
00562 : 0010100000100000  or r0, r4, r0
00563 : 0110000110111000  st.w r0, [sp, 6]
00564 : 0100001000111000  ld.w [sp, 8], r0
00565 : 0100000010111100  ld.w [sp, 2], r4
00566 : 0010100000100000  or r0, r4, r0
00567 : 0110001000111000  st.w r0, [sp, 8]
00568 : 0000100000001000  zext r1, r0
00569 : 0001000000000000  bswap r0, r0
00570 : 0000000001010010  lsr r2, r2
00571 : 0000010001000000  lsl r0, r0
00572 : 0000010001000000  lsl r0, r0
00573 : 0000010001000000  lsl r0, r0
00574 : 0000010001000000  lsl r0, r0
00575 : 0000010001000000  lsl r0, r0
00576 : 0000010001000000  lsl r0, r0
00577 : 0000010001000000  lsl r0, r0
00578 : 0010100010000100  or r2, r0, r4
00579 : 0100001010111000  ld.w [sp, 10], r0
00580 : 0000100000000000  zext r0, r0
00581 : 0001000000000000  bswap r0, r0
00582 : 0000000001011011  lsr r3, r3
00583 : 0000010001000000  lsl r0, r0
00584 : 0000010001000000  lsl r0, r0
00585 : 0000010001000000  lsl r0, r0
00586 : 0000010001000000  lsl r0, r0
00587 : 0000010001000000  lsl r0, r0
00588 : 0000010001000000  lsl r0, r0
00589 : 0000010001000000  lsl r0, r0
00590 : 0010100011000110  or r3, r0, r6
00591 : 0100001010111010  ld.w [sp, 10], r2
00592 : 0000000001001001  lsr r1, r1
00593 : 0000000001010010  lsr r2, r2
00594 : 1111111111000101  jmp .LBB13_6  @Value:-59
00595 : 0100001000111000  ld.w [sp, 8], r0
00596 : 0100000110111001  ld.w [sp, 6], r1
00597 : 1001000010000111  add sp, 16, sp
00598 : 0000110100000100  pop r4
00599 : 0000110100000101  pop r5
00600 : 0000110100000110  pop r6
00601 : 0000000110000000  ret
00602 : 0000100100000110  push r6
00603 : 0000100100000101  push r5
00604 : 0000100100000100  push r4
00605 : 1001100000110111  sub sp, 6, sp
00606 : 0110000100111001  st.w r1, [sp, 4]
00607 : 0110000010111000  st.w r0, [sp, 2]
00608 : 1000000000000000  mov 0, r0
00609 : 1000000000001101  mov 1, r5
00610 : 1000100000000011  cmp r3, 0
00611 : 1111111101000010  brcc 5, .LBB14_6  @Value:+66
00612 : 0100000010111001  ld.w [sp, 2], r1
00613 : 0000010000010001  cmp r2, r1
00614 : 0000100111000110  setcc 2, r6
00615 : 0100000100111100  ld.w [sp, 4], r4
00616 : 0000010000011100  cmp r3, r4
00617 : 0000100111000100  setcc 2, r4
00618 : 0000001110100100  selcc 0, r6, r4, r4
00619 : 1010000000001100  and r4, 1, r4
00620 : 1111111100111001  brcc 1, .LBB14_6  @Value:+57
00621 : 0010100101000100  or r5, r0, r4
00622 : 1111111100110111  brcc 0, .LBB14_6  @Value:+55
00623 : 0000010001000001  lsl r0, r1
00624 : 1000100000000101  cmp r5, 0
00625 : 0001010111000100  setcc 5, r4
00626 : 0010100001100000  or r1, r4, r0
00627 : 0000010001011011  lsl r3, r3
00628 : 1000100000000010  cmp r2, 0
00629 : 0001010111000100  setcc 5, r4
00630 : 0010100011100011  or r3, r4, r3
00631 : 0000010001101101  lsl r5, r5
00632 : 0000010001010010  lsl r2, r2
00633 : 1111111111101001  jmp .LBB14_1  @Value:-23
00634 : 0110000000111101  st.w r5, [sp, 0]
00635 : 0000000000000101  mov r0, r5
00636 : 0100000010111000  ld.w [sp, 2], r0
00637 : 0000010000000010  cmp r0, r2
00638 : 0000110111000100  setcc 3, r4
00639 : 0100000100111001  ld.w [sp, 4], r1
00640 : 0000010000001011  cmp r1, r3
00641 : 0000110111000110  setcc 3, r6
00642 : 0000001100110100  selcc 0, r4, r6, r4
00643 : 1000100000000100  cmp r4, 0
00644 : 1000000000000100  mov 0, r4
00645 : 0000011100011110  selcc 1, r4, r3, r6
00646 : 0000011100010100  selcc 1, r4, r2, r4
00647 : 0010010000100000  sub r0, r4, r0
00648 : 0110000010111000  st.w r0, [sp, 2]
00649 : 0000000000101000  mov r5, r0
00650 : 0010011001110001  subc r1, r6, r1
00651 : 0110000100111001  st.w r1, [sp, 4]
00652 : 0000100000011100  zext r3, r4
00653 : 0001000000100100  bswap r4, r4
00654 : 0000000001010010  lsr r2, r2
00655 : 0000010001100100  lsl r4, r4
00656 : 0000010001100100  lsl r4, r4
00657 : 0000010001100100  lsl r4, r4
00658 : 0000010001100100  lsl r4, r4
00659 : 0000010001100100  lsl r4, r4
00660 : 0000010001100100  lsl r4, r4
00661 : 0000010001100100  lsl r4, r4
00662 : 0010100010100010  or r2, r4, r2
00663 : 0000100000000100  zext r0, r4
00664 : 0001000000100100  bswap r4, r4
00665 : 0100000000111001  ld.w [sp, 0], r1
00666 : 0000000001001101  lsr r1, r5
00667 : 0000010001100100  lsl r4, r4
00668 : 0000010001100100  lsl r4, r4
00669 : 0000010001100100  lsl r4, r4
00670 : 0000010001100100  lsl r4, r4
00671 : 0000010001100100  lsl r4, r4
00672 : 0000010001100100  lsl r4, r4
00673 : 0000010001100100  lsl r4, r4
00674 : 0010100101100101  or r5, r4, r5
00675 : 0000000001011011  lsr r3, r3
00676 : 0000000001000000  lsr r0, r0
00677 : 0010100101000100  or r5, r0, r4
00678 : 1111111111010100  brcc 1, .LBB14_5  @Value:-44
00679 : 0100000010111000  ld.w [sp, 2], r0
00680 : 0100000100111001  ld.w [sp, 4], r1
00681 : 1001000000110111  add sp, 6, sp
00682 : 0000110100000100  pop r4
00683 : 0000110100000101  pop r5
00684 : 0000110100000110  pop r6
00685 : 0000000110000000  ret
00686 : 0000100100000110  push r6
00687 : 0000100100000101  push r5
00688 : 0000100100000100  push r4
00689 : 1001100000010111  sub sp, 2, sp
00690 : 0000000000011100  mov r3, r4
00691 : 0000000000001101  mov r1, r5
00692 : 1000000000000110  mov 0, r6
00693 : 0010010110000001  sub r6, r0, r1
00694 : 0010011110101011  subc r6, r5, r3
00695 : 1000100000000101  cmp r5, 0
00696 : 0001011001000000  selcc 5, r1, r0, r0
00697 : 0110000000111000  st.w r0, [sp, 0]
00698 : 0001011011101001  selcc 5, r3, r5, r1
00699 : 0010010110010011  sub r6, r2, r3
00700 : 0010011110100000  subc r6, r4, r0
00701 : 1000100000000100  cmp r4, 0
00702 : 0001011011010010  selcc 5, r3, r2, r2
00703 : 0001011000100011  selcc 5, r0, r4, r3
00704 : 0100000000111000  ld.w [sp, 0], r0
00705 : 1111111100101110  jsr __udivsi3  @Value:-210
00706 : 0010110100101010  xor r4, r5, r2
00707 : 0010010110000011  sub r6, r0, r3
00708 : 0010011110001100  subc r6, r1, r4
00709 : 1000111111111010  cmp r2, -1
00710 : 0001111000011000  selcc 7, r0, r3, r0
00711 : 0001111001100001  selcc 7, r1, r4, r1
00712 : 1001000000010111  add sp, 2, sp
00713 : 0000110100000100  pop r4
00714 : 0000110100000101  pop r5
00715 : 0000110100000110  pop r6
00716 : 0000000110000000  ret
00717 : 0000100100000110  push r6
00718 : 0000100100000101  push r5
00719 : 0000100100000100  push r4
00720 : 0000000000001100  mov r1, r4
00721 : 1000000000000101  mov 0, r5
00722 : 0010010101010001  sub r5, r2, r1
00723 : 0010011101011110  subc r5, r3, r6
00724 : 1000100000000011  cmp r3, 0
00725 : 0001011001010010  selcc 5, r1, r2, r2
00726 : 0001011110011011  selcc 5, r6, r3, r3
00727 : 0010010101000001  sub r5, r0, r1
00728 : 0010011101100110  subc r5, r4, r6
00729 : 1000100000000100  cmp r4, 0
00730 : 0001011001000000  selcc 5, r1, r0, r0
00731 : 0001011110100001  selcc 5, r6, r4, r1
00732 : 1111111101111110  jsr __umodsi3  @Value:-130
00733 : 0010010101000010  sub r5, r0, r2
00734 : 0010011101001011  subc r5, r1, r3
00735 : 1000111111111100  cmp r4, -1
00736 : 0001111000010000  selcc 7, r0, r2, r0
00737 : 0001111001011001  selcc 7, r1, r3, r1
00738 : 0000110100000100  pop r4
00739 : 0000110100000101  pop r5
00740 : 0000110100000110  pop r6
00741 : 0000000110000000  ret

Constant Data:

Initialized Variables:

Unitialized Variables:
00000 : 0 bytes
